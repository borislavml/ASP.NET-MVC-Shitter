@model Shitter.Web.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2 class="text-center">@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post,
    new { @class = "form-horizontal center col-md-6 login-register-form", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4 class="text-center">Create a new account.</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Username, new { @class = "col-md-4 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FullName, new { @class = "col-md-4 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
        <div class="col-md-8">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
        <div class="col-md-8">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ImageDataUrl, new { @class = "col-md-4 control-label" })
        <div class="col-md-8 input-group">
            @*@Html.TextBoxFor(m => m.ImageDataUrl, new { @class = "form-control", type = "file" })*@
            <span class="input-group-btn">
                <span class="btn btn-info btn-file">
                    Browse
                    <input type="file" name="ImageDataUrl" id="ImageDataUrl" onchange="readURL(this);" />
                </span>
            </span>
            <input type="text" class="form-control image-title" readonly="" id="profile-picure" value="" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-6 center">
            @Html.ValidationMessageFor(m => m.ImageDataUrl, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group ">
        <div class="col-md-4 center">
            <input type="submit" class="btn btn-success" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom")
}
